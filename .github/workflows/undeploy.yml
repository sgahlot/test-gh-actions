name: Undeploy from OpenShift

on:
  workflow_dispatch:
    inputs:
      namespace:
        description: 'Target namespace for undeployment'
        required: true
        type: string
      confirm_uninstall:
        description: 'Type "DELETE {namespace}" using the exact namespace name to confirm permanent deletion'
        required: true
        type: string
env:
  NAMESPACE: ${{ github.event.inputs.namespace }}

jobs:
  check-confirmation:
    runs-on: ubuntu-latest
    # Only run for manual triggers without proper confirmation
    if: ${{ github.event.inputs.confirm_uninstall != format('DELETE {0}', github.event.inputs.namespace) }}
    steps:
      - name: Log confirmation error
        run: |
          EXPECTED="DELETE ${{ github.event.inputs.namespace }}"
          echo "‚ùå Manual undeploy workflow triggered without proper confirmation"
          echo ""
          echo "üõ°Ô∏è  Safety Check Failed:"
          echo "   - Manual undeployment requires typing the exact phrase including namespace"
          echo "   - Expected: '$EXPECTED'"
          echo "   - You entered: '${{ github.event.inputs.confirm_uninstall }}'"
          echo "   - This prevents accidental deletion of deployments"
          echo ""
          echo "üìã To run this workflow:"
          echo "   1. Go to Actions ‚Üí Undeploy from OpenShift"
          echo "   2. Click 'Run workflow'"
          echo "   3. Specify the target namespace"
          echo "   4. ‚úÖ Type '$EXPECTED' (without quotes) in the confirmation field"
          echo "   5. Click 'Run workflow'"
          echo ""
          echo "üîç Current inputs:"
          echo "   - Namespace: ${{ github.event.inputs.namespace }}"
          echo "   - Confirmation: '${{ github.event.inputs.confirm_uninstall }}'"
          echo "   - Required: '$EXPECTED'"
          exit 1

  undeploy:
    runs-on: ubuntu-latest
    # Only run with manual trigger and proper confirmation
    if: ${{ github.event.inputs.confirm_uninstall == format('DELETE {0}', github.event.inputs.namespace) }}

    steps:
      - name: Log undeploy initiation
        run: |
          echo "üö® UNDEPLOY OPERATION INITIATED"
          echo "üë§ User: ${{ github.actor }} (${{ github.triggering_actor }})"
          echo "üéØ Target Namespace: ${{ env.NAMESPACE }}"
          echo "‚è∞ Started at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "‚úÖ Confirmation received: ${{ github.event.inputs.confirm_uninstall }}"
          echo "üîó Workflow Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Show branch and commit info
        run: |
          echo "::group::Repository Information"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "::endgroup::"

      - name: Install OpenShift CLI
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Login to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          insecure_skip_tls_verify: true # Set to false if we have a valid certificate

      - name: Show deployment context
        run: |
          echo "üìã Undeploy Context:"
          echo "  Run Type: manual"
          echo "  Namespace: ${{ env.NAMESPACE }}"
          echo "  Trigger: workflow_dispatch"
          echo "  Triggered by: ${{ github.actor }}"
          echo "  User ID: ${{ github.triggering_actor }}"
          echo "  Timestamp: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "  Repository: ${{ github.repository }}"
          echo "  Branch: ${{ github.ref_name }}"
          echo "  Commit: ${{ github.sha }}"
          echo "  Workflow Run: ${{ github.run_id }}"
          echo "  Confirmation: ${{ github.event.inputs.confirm_uninstall }}"

      - name: Show resources before uninstall
        run: |
          echo "üìä Resources in namespace ${{ env.NAMESPACE }} before uninstall:"
          make status NAMESPACE=${{ env.NAMESPACE }}

      - name: Uninstall metrics-summarizer with Makefile
        env:
          NAMESPACE: ${{ env.NAMESPACE }}
        run: |
          echo "üóëÔ∏è Uninstalling from namespace: ${{ env.NAMESPACE }}"
          make uninstall NAMESPACE=${{ env.NAMESPACE }}

      - name: Log undeploy completion
        run: |
          echo "‚úÖ UNDEPLOY OPERATION COMPLETED"
          echo "üë§ User: ${{ github.actor }} (${{ github.triggering_actor }})"
          echo "üéØ Namespace: ${{ env.NAMESPACE }} - UNDEPLOYED"
          echo "‚è∞ Completed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo "üîó Workflow Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"